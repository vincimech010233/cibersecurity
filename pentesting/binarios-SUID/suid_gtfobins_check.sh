#!/bin/bash

# Este script tiene como objetivo buscar todos los binarios en el sistema que tienen el bit SUID habilitado,
# y luego verificar automáticamente si existen exploits conocidos para dichos binarios en la base de datos de GTFOBins.
# Utiliza el repositorio de 7Rocky para esta funcionalidad, permitiendo identificar vulnerabilidades potenciales 
# que puedan facilitar la elevación de privilegios.

# Ruta al script gtfobins-cli.py
GTFB_CLI_PATH="/ruta/al/directorio/gtfobins-cli/gtfobins-cli.py"

# Función para mostrar ayuda
show_help() {
    echo "Uso: sudo ./suid_gtfobins_check.sh"
    echo
    echo "Este script busca todos los binarios con el bit SUID en el sistema y"
    echo "verifica automáticamente si existen posibles exploits conocidos en la"
    echo "base de datos de GTFOBins mediante gtfobins-cli."
    echo
    echo "Requisitos previos:"
    echo "  1. Clonar e instalar gtfobins-cli desde GitHub:"
    echo "     $ git clone https://github.com/7Rocky/gtfobins-cli"
    echo "     $ cd gtfobins-cli/"
    echo "     $ chmod +x gtfobins-cli.py"
    echo
    echo "  2. Ejecutar este script con permisos elevados para permitir la búsqueda"
    echo "     de todos los binarios en el sistema."
    echo
    echo "Opciones:"
    echo "  --help, -h, -help, --h    Muestra esta ayuda y termina la ejecución."
}

# Mostrar ayuda solo si se usa -h, --h, --help, o -help
if [[ "$1" =~ ^(-h|--h|--help|-help)$ ]]; then
    show_help
    exit 0
fi

# Verificar si el script se ejecuta con permisos de superusuario
if [ "$EUID" -ne 0 ]; then
    echo -e "Este script debe ejecutarse con permisos de superusuario.\n"
    exit 1
fi

# Verificar si el archivo gtfobins-cli.py existe y es ejecutable
if [ ! -f "$GTFB_CLI_PATH" ] || [ ! -x "$GTFB_CLI_PATH" ]; then
    echo -e "gtfobins-cli.py no se encuentra o no tiene permisos de ejecución. Verifica la instalación.\n"
    exit 1
fi

echo "Buscando binarios con SUID en el sistema..."
suid_binaries=$(find / -perm -4000 -type f 2>/dev/null)

echo "Verificando binarios en GTFOBins..."
for binary in $suid_binaries; do
    binary_name=$(basename "$binary")
    echo "Verificando $binary_name..."

    python3 "$GTFB_CLI_PATH" "$binary_name" &> /dev/null
    if [ $? -eq 0 ]; then
        echo "¡Explotación posible encontrada para $binary_name!"
        python3 "$GTFB_CLI_PATH" "$binary_name"  # Muestra la información de explotación
    else
        echo "No se encontraron exploits para $binary_name en GTFOBins."
    fi
    echo "------------------------------"
done

echo "Análisis completado."
